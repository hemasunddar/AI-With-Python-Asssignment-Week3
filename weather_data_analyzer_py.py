# -*- coding: utf-8 -*-
"""Weather Data Analyzer.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12RPMvQRgh-Ku_YRnL6PJr4bEWmKW-IN1
"""

#  Weather Data Fetcher & Analyzer
import requests
import csv
from datetime import datetime

# actual OpenWeatherMap API key
api_key = "96e030b49871d50968291ed01ceda362"

#  Fetch weather data from OpenWeatherMap
def fetch_weather(city: str, api_key: str) -> dict:
    try:
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
        response = requests.get(url)
        response.raise_for_status()  # Raise error for 4xx/5xx
        return response.json()
    except requests.exceptions.HTTPError as http_err:
        print(f"HTTP error occurred: {http_err}")
    except requests.exceptions.RequestException as req_err:
        print(f"Network error occurred: {req_err}")
    except Exception as e:
        print(f"Unexpected error: {e}")
    return {}

#  Analyze weather data and return human-readable summary
def analyze_weather(weather_data: dict) -> str:
    try:
        temp = weather_data['main']['temp']
        wind = weather_data['wind']['speed']
        humidity = weather_data['main']['humidity']

        summary = ""
        if temp <= 10:
            summary = "Cold (≤10°C)"
        elif temp <= 24:
            summary = "Mild (11–24°C)"
        else:
            summary = "Hot (≥25°C)"

        if wind > 10:
            summary += " | High wind alert!"
        if humidity > 80:
            summary += " | Humid conditions!"

        return summary
    except KeyError:
        return "Incomplete data for analysis."

#  Log weather data to a CSV file
def log_weather(city: str, weather_data: dict, summary: str, filename: str = "weather_log.csv"):
    try:
        temp = weather_data['main']['temp']
        wind = weather_data['wind']['speed']
        humidity = weather_data['main']['humidity']
        timestamp = datetime.now().strftime('%Y-%m-%d %H:%M:%S')

        with open(filename, 'a', newline='') as csvfile:
            writer = csv.writer(csvfile)
            # Write header if file is new
            if csvfile.tell() == 0:
                writer.writerow(["Timestamp", "City", "Temp (°C)", "Wind (m/s)", "Humidity (%)", "Summary"])
            writer.writerow([timestamp, city, temp, wind, humidity, summary])
    except Exception as e:
        print("Failed to write to CSV:", e)

#  MAIN PROGRAM
if __name__ == "__main__":
    city = input("Enter your city: ")  # Ask user to enter any city

    # Fetch weather and analyze
    weather_data = fetch_weather(city, api_key)
    if weather_data:
        summary = analyze_weather(weather_data)
        print(f"\nWeather Summary for {city}:\n{summary}")

        # Save to CSV log
        log_weather(city, weather_data, summary)
    else:
        print("Could not fetch weather data.")